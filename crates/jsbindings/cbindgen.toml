language = "C++"

############## Options for Wrapping the Contents of the Header #################

namespace = "holocron"
autogen_warning = "/* Autogenerated file. Do not edit. */"
pragma_once = true
sys_includes = ["assert.h"]
includes = ["./bindings.base.h"]
no_includes = false
after_includes = ""

############################ Code Style Options ################################

braces = "NextLine"
line_length = 85
tab_width = 2
documentation = true
documentation_style = "auto"
documentation_length = "full"
line_endings = "LF"

############################# Codegen Options ##################################

[defines]
# These will actually never be defined, but is handy to avoid cbindgen
# generating Servo-only types.
"feature = servo" = "CBINDGEN_IS_SERVO"
"feature = servo-layout-2013" = "CBINDGEN_IS_SERVO"
"feature = servo-layout-2020" = "CBINDGEN_IS_SERVO"
"feature = track_alloc_size" = "CBINDGEN_IS_SERVO"
# These will always be defined.
"feature = gecko" = "CBINDGEN_IS_GECKO"
"feature = cbindgen" = "CBINDGEN_IS_GECKO"
# These depend on the build.
"target_pointer_width = 32" = "SERVO_32_BITS"
"target_pointer_width = 64" = "SERVO_64_BITS"

[struct]
associated_constants_in_body = true
derive_eq = true
derive_neq = true

[export]
prefix = "_"
exclude = ["NS_LogCtor", "NS_LogDtor", "SelectorList", "AuthorStyles"]
item_types = [
  "enums",
  "structs",
  "unions",
  "typedefs",
  "functions",
  "constants",
]

[macro_expansion]
bitflags = true

############## Options for How Your Rust library Should Be Parsed ##############

[parse]
parse_deps = true
extra_bindings = ["style"]
include = ["app_units", "style", "style_traits"]

# [parse.expand]
# crates = ["style_traits"]
# all_features = false
# default_features = true
# features = []
