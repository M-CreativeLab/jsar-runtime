#pragma once

#include <vector>

#include "idgen.hpp"
#include "common/ipc.hpp"
#include "common/ipc_message.hpp"
#include "common/ipc_serializable.hpp"

#include "./macros.hpp"
#include "./webgl_constants.hpp"

namespace commandbuffers
{
  class TrCommandBufferSender;
  class TrCommandBufferReceiver;
  class TrCommandBufferMessage;
  class TrCommandBufferBase;
  class TrCommandBufferResponse;

  static TrIdGenerator commandBufferIdGen(1);

  enum CommandBufferType
  {
    /** Default */
    COMMAND_BUFFER_UNKNOWN = 0,

    /** Context */
    COMMAND_BUFFER_CREATE_WEBGL_CONTEXT_REQ, // Create a WebGL context.
    COMMAND_BUFFER_REMOVE_WEBGL_CONTEXT_REQ, // Remove a WebGL context.
    COMMAND_BUFFER_WEBGL_CONTEXT_INIT_REQ,   // Initialize a WebGL1 context.
    COMMAND_BUFFER_WEBGL_CONTEXT_INIT_RES,   // Response of the WebGL1 context initialization.
    COMMAND_BUFFER_WEBGL2_CONTEXT_INIT_REQ,  // Initialize a WebGL2 context.
    COMMAND_BUFFER_WEBGL2_CONTEXT_INIT_RES,  // Response of the WebGL2 context initialization.

    /** Extensions */
    COMMAND_BUFFER_GET_EXTENSIONS_REQ,
    COMMAND_BUFFER_GET_EXTENSIONS_RES,

    /** Program */
    COMMAND_BUFFER_CREATE_PROGRAM_REQ,
    COMMAND_BUFFER_DELETE_PROGRAM_REQ,
    COMMAND_BUFFER_LINK_PROGRAM_REQ,
    COMMAND_BUFFER_LINK_PROGRAM_RES,
    COMMAND_BUFFER_USE_PROGRAM_REQ,
    COMMAND_BUFFER_BIND_ATTRIB_LOCATION_REQ,
    COMMAND_BUFFER_GET_PROGRAM_PARAM_REQ,
    COMMAND_BUFFER_GET_PROGRAM_PARAM_RES,
    COMMAND_BUFFER_GET_PROGRAM_INFO_LOG_REQ,
    COMMAND_BUFFER_GET_PROGRAM_INFO_LOG_RES,

    /** Shader */
    COMMAND_BUFFER_ATTACH_SHADER_REQ,
    COMMAND_BUFFER_DETACH_SHADER_REQ,
    COMMAND_BUFFER_CREATE_SHADER_REQ,
    COMMAND_BUFFER_DELETE_SHADER_REQ,
    COMMAND_BUFFER_COMPILE_SHADER_REQ,
    COMMAND_BUFFER_SHADER_SOURCE_REQ,
    COMMAND_BUFFER_GET_SHADER_SOURCE_REQ,
    COMMAND_BUFFER_GET_SHADER_SOURCE_RES,
    COMMAND_BUFFER_GET_SHADER_PARAM_REQ,
    COMMAND_BUFFER_GET_SHADER_PARAM_RES,
    COMMAND_BUFFER_GET_SHADER_INFO_LOG_REQ,
    COMMAND_BUFFER_GET_SHADER_INFO_LOG_RES,

    /** Buffer */
    COMMAND_BUFFER_CREATE_BUFFER_REQ,
    COMMAND_BUFFER_DELETE_BUFFER_REQ,
    COMMAND_BUFFER_BIND_BUFFER_REQ,
    COMMAND_BUFFER_BUFFER_DATA_REQ,
    COMMAND_BUFFER_BUFFER_SUB_DATA_REQ,
    COMMAND_BUFFER_CREATE_FRAMEBUFFER_REQ,
    COMMAND_BUFFER_DELETE_FRAMEBUFFER_REQ,
    COMMAND_BUFFER_BIND_FRAMEBUFFER_REQ,
    COMMAND_BUFFER_FRAMEBUFFER_RENDERBUFFER_REQ,
    COMMAND_BUFFER_FRAMEBUFFER_TEXTURE2D_REQ,
    COMMAND_BUFFER_CHECK_FRAMEBUFFER_STATUS_REQ,
    COMMAND_BUFFER_CHECK_FRAMEBUFFER_STATUS_RES,
    COMMAND_BUFFER_CREATE_RENDERBUFFER_REQ,
    COMMAND_BUFFER_DELETE_RENDERBUFFER_REQ,
    COMMAND_BUFFER_BIND_RENDERBUFFER_REQ,
    COMMAND_BUFFER_RENDERBUFFER_STORAGE_REQ,
    COMMAND_BUFFER_READ_BUFFER_REQ,
    COMMAND_BUFFER_BIND_BUFFER_BASE_REQ,
    COMMAND_BUFFER_BIND_BUFFER_RANGE_REQ,
    COMMAND_BUFFER_BLIT_FRAMEBUFFER_REQ,
    COMMAND_BUFFER_RENDERBUFFER_STORAGE_MULTISAMPLE_REQ,

    /** Vertex Array */
    COMMAND_BUFFER_CREATE_VERTEX_ARRAY_REQ,
    COMMAND_BUFFER_DELETE_VERTEX_ARRAY_REQ,
    COMMAND_BUFFER_BIND_VERTEX_ARRAY_REQ,
    COMMAND_BUFFER_IS_VERTEX_ARRAY_REQ,
    COMMAND_BUFFER_IS_VERTEX_ARRAY_RES,

    /** Vertex attribute */
    COMMAND_BUFFER_ENABLE_VERTEX_ATTRIB_ARRAY_REQ,
    COMMAND_BUFFER_DISABLE_VERTEX_ATTRIB_ARRAY_REQ,
    COMMAND_BUFFER_VERTEX_ATTRIB_POINTER_REQ,
    COMMAND_BUFFER_VERTEX_ATTRIB_IPOINTER_REQ,
    COMMAND_BUFFER_VERTEX_ATTRIB_DIVISOR_REQ,

    /** Texture */
    COMMAND_BUFFER_CREATE_TEXTURE_REQ,
    COMMAND_BUFFER_DELETE_TEXTURE_REQ,
    COMMAND_BUFFER_BIND_TEXTURE_REQ,
    COMMAND_BUFFER_TEXTURE_IMAGE_2D_REQ,
    COMMAND_BUFFER_TEXTURE_SUB_IMAGE_2D_REQ,
    COMMAND_BUFFER_COPY_TEXTURE_IMAGE_2D_REQ,
    COMMAND_BUFFER_COPY_TEXTURE_SUB_IMAGE_2D_REQ,
    COMMAND_BUFFER_TEXTURE_PARAMETERI_REQ,
    COMMAND_BUFFER_TEXTURE_PARAMETERF_REQ,
    COMMAND_BUFFER_ACTIVE_TEXTURE_REQ,
    COMMAND_BUFFER_GENERATE_MIPMAP_REQ,
    COMMAND_BUFFER_TEXTURE_IMAGE_3D_REQ,
    COMMAND_BUFFER_TEXTURE_SUB_IMAGE_3D_REQ,
    COMMAND_BUFFER_TEXTURE_STORAGE_2D_REQ,
    COMMAND_BUFFER_TEXTURE_STORAGE_3D_REQ,

    /** Sampler */
    COMMAND_BUFFER_CREATE_SAMPLER_REQ,
    COMMAND_BUFFER_DELETE_SAMPLER_REQ,
    COMMAND_BUFFER_BIND_SAMPLER_REQ,
    COMMAND_BUFFER_SAMPLER_PARAMETERI_REQ,
    COMMAND_BUFFER_SAMPLER_PARAMETERF_REQ,
    COMMAND_BUFFER_GET_SAMPLER_PARAMETER_REQ,
    COMMAND_BUFFER_GET_SAMPLER_PARAMETER_RES,
    COMMAND_BUFFER_IS_SAMPLER_REQ,
    COMMAND_BUFFER_IS_SAMPLER_RES,

    /** Transform feedback */
    COMMAND_BUFFER_CREATE_TRANSFORM_FEEDBACK_REQ,
    COMMAND_BUFFER_DELETE_TRANSFORM_FEEDBACK_REQ,
    COMMAND_BUFFER_BIND_TRANSFORM_FEEDBACK_REQ,
    COMMAND_BUFFER_BEGIN_TRANSFORM_FEEDBACK_REQ,
    COMMAND_BUFFER_END_TRANSFORM_FEEDBACK_REQ,
    COMMAND_BUFFER_TRANSFORM_FEEDBACK_VARYINGS_REQ,
    COMMAND_BUFFER_TRANSFORM_FEEDBACK_VARYINGS_RES,
    COMMAND_BUFFER_GET_TRANSFORM_FEEDBACK_VARYING_REQ,
    COMMAND_BUFFER_GET_TRANSFORM_FEEDBACK_VARYING_RES,
    COMMAND_BUFFER_PAUSE_TRANSFORM_FEEDBACK_REQ,
    COMMAND_BUFFER_RESUME_TRANSFORM_FEEDBACK_REQ,
    COMMAND_BUFFER_IS_TRANSFORM_FEEDBACK_REQ,
    COMMAND_BUFFER_IS_TRANSFORM_FEEDBACK_RES,

    /** Uniforms */
    COMMAND_BUFFER_UNIFORM_BLOCK_BINDING_REQ,
    COMMAND_BUFFER_UNIFORM1F_REQ,
    COMMAND_BUFFER_UNIFORM1FV_REQ,
    COMMAND_BUFFER_UNIFORM1I_REQ,
    COMMAND_BUFFER_UNIFORM1IV_REQ,
    COMMAND_BUFFER_UNIFORM2F_REQ,
    COMMAND_BUFFER_UNIFORM2FV_REQ,
    COMMAND_BUFFER_UNIFORM2I_REQ,
    COMMAND_BUFFER_UNIFORM2IV_REQ,
    COMMAND_BUFFER_UNIFORM3F_REQ,
    COMMAND_BUFFER_UNIFORM3FV_REQ,
    COMMAND_BUFFER_UNIFORM3I_REQ,
    COMMAND_BUFFER_UNIFORM3IV_REQ,
    COMMAND_BUFFER_UNIFORM4F_REQ,
    COMMAND_BUFFER_UNIFORM4FV_REQ,
    COMMAND_BUFFER_UNIFORM4I_REQ,
    COMMAND_BUFFER_UNIFORM4IV_REQ,
    COMMAND_BUFFER_UNIFORM_MATRIX2FV_REQ,
    COMMAND_BUFFER_UNIFORM_MATRIX3FV_REQ,
    COMMAND_BUFFER_UNIFORM_MATRIX4FV_REQ,

    /** Draw calls */
    COMMAND_BUFFER_DRAW_ARRAYS_REQ,
    COMMAND_BUFFER_DRAW_ARRAYS_INSTANCED_REQ,
    COMMAND_BUFFER_DRAW_ELEMENTS_REQ,
    COMMAND_BUFFER_DRAW_ELEMENTS_INSTANCED_REQ,
    COMMAND_BUFFER_DRAW_BUFFERS_REQ,
    COMMAND_BUFFER_DRAW_RANGE_ELEMENTS_REQ,

    /** Clear */
    COMMAND_BUFFER_CLEAR_REQ,
    COMMAND_BUFFER_CLEAR_COLOR_REQ,
    COMMAND_BUFFER_CLEAR_DEPTH_REQ,
    COMMAND_BUFFER_CLEAR_STENCIL_REQ,

    /** States */
    COMMAND_BUFFER_SET_VIEWPORT_REQ,
    COMMAND_BUFFER_SET_SCISSOR_REQ,
    COMMAND_BUFFER_HINT_REQ,
    COMMAND_BUFFER_LINE_WIDTH_REQ,
    COMMAND_BUFFER_PIXEL_STOREI_REQ,
    COMMAND_BUFFER_POLYGON_OFFSET_REQ,
    COMMAND_BUFFER_DEPTH_MASK_REQ,
    COMMAND_BUFFER_DEPTH_FUNC_REQ,
    COMMAND_BUFFER_DEPTH_RANGE_REQ,
    COMMAND_BUFFER_STENCIL_FUNC_REQ,
    COMMAND_BUFFER_STENCIL_FUNC_SEPARATE_REQ,
    COMMAND_BUFFER_STENCIL_MASK_REQ,
    COMMAND_BUFFER_STENCIL_MASK_SEPARATE_REQ,
    COMMAND_BUFFER_STENCIL_OP_REQ,
    COMMAND_BUFFER_STENCIL_OP_SEPARATE_REQ,
    COMMAND_BUFFER_BLEND_COLOR_REQ,
    COMMAND_BUFFER_BLEND_EQUATION_REQ,
    COMMAND_BUFFER_BLEND_EQUATION_SEPARATE_REQ,
    COMMAND_BUFFER_BLEND_FUNC_REQ,
    COMMAND_BUFFER_BLEND_FUNC_SEPARATE_REQ,
    COMMAND_BUFFER_COLOR_MASK_REQ,
    COMMAND_BUFFER_CULL_FACE_REQ,
    COMMAND_BUFFER_FRONT_FACE_REQ,
    COMMAND_BUFFER_ENABLE_REQ,
    COMMAND_BUFFER_DISABLE_REQ,

    /** Property & Value */
    COMMAND_BUFFER_GET_BOOLEANV_REQ,
    COMMAND_BUFFER_GET_BOOLEANV_RES,
    COMMAND_BUFFER_GET_INTEGERV_REQ,
    COMMAND_BUFFER_GET_INTEGERV_RES,
    COMMAND_BUFFER_GET_FLOATV_REQ,
    COMMAND_BUFFER_GET_FLOATV_RES,
    COMMAND_BUFFER_GET_STRING_REQ,
    COMMAND_BUFFER_GET_STRING_RES,
    COMMAND_BUFFER_GET_SHADER_PRECISION_FORMAT_REQ,
    COMMAND_BUFFER_GET_SHADER_PRECISION_FORMAT_RES,
    COMMAND_BUFFER_GET_ERROR_REQ,
    COMMAND_BUFFER_GET_ERROR_RES,

    /** XRFrame controls */
    COMMAND_BUFFER_XRFRAME_START_REQ,
    COMMAND_BUFFER_XRFRAME_FLUSH_REQ,
    COMMAND_BUFFER_XRFRAME_END_REQ,

    /** Metrics */
    COMMAND_BUFFER_METRICS_PAINTING_REQ,
  };

  std::string commandTypeToStr(CommandBufferType type);

  /**
   * Check this command type is a XRFrame control.
   */
  inline bool isXRFrameControlCommandType(CommandBufferType type)
  {
    return type == COMMAND_BUFFER_XRFRAME_START_REQ ||
           type == COMMAND_BUFFER_XRFRAME_FLUSH_REQ ||
           type == COMMAND_BUFFER_XRFRAME_END_REQ;
  }

  // Check this command type is a request type.
  template <CommandBufferType Type>
  concept is_commandbuffer_request = (
#define XX(name, type) Type == COMMAND_BUFFER_##name##_REQ ||
    TR_COMMAND_BUFFER_REQUESTS_MAP(XX)
#undef XX
      false);

  // Check this command type is a response type.
  template <CommandBufferType Type>
  concept is_commandbuffer_response = (
#define XX(name, type) Type == COMMAND_BUFFER_##name##_REQ ||
    TR_COMMAND_BUFFER_RESPONSES_MAP(XX)
#undef XX
      false);

  using namespace ipc;
  class TrCommandBufferMessage : public TrIpcMessage<TrCommandBufferMessage, CommandBufferType>
  {
    friend class TrCommandBufferBase;
    friend class TrCommandBufferSender;
    friend class TrCommandBufferReceiver;

  public:
    TrCommandBufferMessage()
        : TrIpcMessage(COMMAND_BUFFER_UNKNOWN, 0, nullptr)
    {
    }
    TrCommandBufferMessage(CommandBufferType type, size_t size, void *base)
        : TrIpcMessage(type, size, base)
    {
    }
  };
}
